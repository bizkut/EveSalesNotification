version: '3.8'

services:
  db:
    image: postgres:16-alpine # Upgraded for ElectricSQL compatibility
    container_name: eve-market-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: # Enable logical replication for ElectricSQL and suppress benign startup errors
      - -c
      - wal_level=logical
      - -c
      - log_min_messages=FATAL

  electric:
    image: electricsql/electric:latest
    container_name: eve-market-electric
    restart: unless-stopped
    ports:
      - "5133:5133" # Electric's Postgres-proxy port
    env_file:
      - .env
    environment:
      - ELECTRIC_INSECURE=true # For development only
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "electric-sql", "proxy-status", "--proxy-port", "5133"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: .
    container_name: eve-market-bot
    restart: unless-stopped
    command: ["python", "bot.py"]
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      electric:
        condition: service_healthy

  webapp:
    build: .
    container_name: eve-market-webapp
    restart: unless-stopped
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--log-level", "${LOG_LEVEL}", "webapp:app"]
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      electric:
        condition: service_healthy

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: eve-market-cloudflared
    restart: unless-stopped
    depends_on:
      - webapp
    env_file:
      - .env
    command: tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}

volumes:
  postgres_data:
    driver: local