version: '3.8'

services:
  db:
    image: postgres:16-alpine # Upgraded for ElectricSQL compatibility
    container_name: eve-market-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: # Enable logical replication for ElectricSQL
      - -c
      - wal_level=logical

  electric:
    image: electricsql/electric:latest
    container_name: eve-market-electric
    restart: unless-stopped
    ports:
      - "5133:5133" # Electric's Postgres-proxy port
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      - ELECTRIC_INSECURE=true # For development only
    depends_on:
      db:
        condition: service_healthy

  bot:
    build: .
    container_name: eve-market-bot
    restart: unless-stopped
    command: ["python", "bot.py"]
    environment:
      - PYTHONUNBUFFERED=1
      - ESI_CLIENT_ID=${ESI_CLIENT_ID}
      - ESI_SECRET_KEY=${ESI_SECRET_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - LOG_LEVEL=${LOG_LEVEL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      electric:
        condition: service_started

  webapp:
    build: .
    container_name: eve-market-webapp
    restart: unless-stopped
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--log-level", "${LOG_LEVEL}", "webapp:app"]
    environment:
      - PYTHONUNBUFFERED=1
      - ESI_CLIENT_ID=${ESI_CLIENT_ID}
      - ESI_SECRET_KEY=${ESI_SECRET_KEY}
      - CALLBACK_URL=${CALLBACK_URL}
      - LOG_LEVEL=${LOG_LEVEL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      electric:
        condition: service_started

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: eve-market-cloudflared
    restart: unless-stopped
    depends_on:
      - webapp
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    command: tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}

volumes:
  postgres_data:
    driver: local